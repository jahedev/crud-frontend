[{"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\index.js":"1","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\App.js":"2","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\reportWebVitals.js":"3","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\redux\\store.js":"4","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\AllStudents.js":"5","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\Homepage.js":"6","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\AllCampuses.js":"7","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\SingleStudent.js":"8","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\CreateStudent.js":"9","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\SingleCampus.js":"10","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\Navbar.js":"11","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\CreateCampus.js":"12","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\redux\\reducers\\index.js":"13","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\Student.js":"14","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\Campus.js":"15","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\redux\\reducers\\actionTypes.js":"16","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\DeleteStudent.js":"17","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\DeleteCampus.js":"18","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\HalfHeaderBG.js":"19"},{"size":614,"mtime":1611280186855,"results":"20","hashOfConfig":"21"},{"size":1319,"mtime":1611520317776,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":277,"mtime":1611278880902,"results":"24","hashOfConfig":"21"},{"size":2234,"mtime":1611540396560,"results":"25","hashOfConfig":"21"},{"size":665,"mtime":1611540396561,"results":"26","hashOfConfig":"21"},{"size":3370,"mtime":1611540426191,"results":"27","hashOfConfig":"21"},{"size":7692,"mtime":1611529038444,"results":"28","hashOfConfig":"21"},{"size":4906,"mtime":1611540396561,"results":"29","hashOfConfig":"21"},{"size":6974,"mtime":1611528917025,"results":"30","hashOfConfig":"21"},{"size":593,"mtime":1611520317778,"results":"31","hashOfConfig":"21"},{"size":2888,"mtime":1611540396560,"results":"32","hashOfConfig":"21"},{"size":7008,"mtime":1611520123613,"results":"33","hashOfConfig":"21"},{"size":763,"mtime":1611514299028,"results":"34","hashOfConfig":"21"},{"size":944,"mtime":1611537354431,"results":"35","hashOfConfig":"21"},{"size":506,"mtime":1611455135633,"results":"36","hashOfConfig":"21"},{"size":1168,"mtime":1611446501754,"results":"37","hashOfConfig":"21"},{"size":960,"mtime":1611537354439,"results":"38","hashOfConfig":"21"},{"size":343,"mtime":1611540396561,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j1xz6v",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"51"},"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\index.js",[],"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\App.js",[],"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\reportWebVitals.js",[],"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\redux\\store.js",[],"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\AllStudents.js",["84"],"import React, { Component } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getAllStudents } from '../redux/reducers'\r\n\r\nimport Student from './Student'\r\nimport CreateStudent from './CreateStudent'\r\n\r\nclass AllStudents extends Component {\r\n  state = {\r\n    addingStudent: false,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.fetchAllStudents()\r\n  }\r\n\r\n  async fetchAllStudents() {\r\n    await this.props.getAllStudents()\r\n    setTimeout(() => {\r\n      console.log(this.props.students)\r\n    }, 200)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <div className='half-bg-students'></div>\r\n\r\n        <h1>All Students Component</h1>\r\n\r\n        <div>\r\n          <button\r\n            onClick={() =>\r\n              this.setState({ addingStudent: !this.state.addingStudent })\r\n            }\r\n          >\r\n            Add Student\r\n          </button>\r\n        </div>\r\n        {this.state.addingStudent === true ? (\r\n          <div>\r\n            <CreateStudent />\r\n            <div>\r\n              <button onClick={() => this.setState({ addingStudent: false })}>\r\n                Cancel Addition\r\n              </button>\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <br />\r\n        )}\r\n\r\n        {this.props.students !== undefined ? (\r\n          this.props.students.map((student, index) => (\r\n            <Student\r\n              key={index}\r\n              id={student.id}\r\n              first={student.first}\r\n              last={student.last}\r\n              email={student.email}\r\n              image={student.image}\r\n              gpa={student.gpa}\r\n              CampusId={student.CampusId}\r\n            />\r\n          ))\r\n        ) : (\r\n          <br />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    students: state.students,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllStudents: () => dispatch(getAllStudents()),\r\n    // deleteStudent: () => dispatch(deleteStudent()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllStudents)\r\n",["85","86"],"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\Homepage.js",["87","88"],"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\AllCampuses.js",["89"],"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\SingleStudent.js",[],"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\CreateStudent.js",["90","91"],"import React, { Component } from 'react'\r\n\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nimport {\r\n  createStudent,\r\n  getCampusById,\r\n  getStudentById,\r\n  getAllCampuses,\r\n} from '../redux/reducers'\r\n\r\nimport { connect } from 'react-redux'\r\nimport HalfHeaderBG from './HalfHeaderBG'\r\n\r\nclass CreateStudent extends Component {\r\n  state = {\r\n    redirect: false,\r\n    studentInfo: {\r\n      first: '',\r\n      last: '',\r\n      email: '',\r\n      image: '',\r\n      gpa: '',\r\n      CampusId: '',\r\n    },\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.props.getAllCampuses()\r\n  }\r\n\r\n  handleSelectChange = (e) => {\r\n    this.setState({\r\n      studentInfo: {\r\n        ...this.state.studentInfo,\r\n        CampusId: e.target.value,\r\n      },\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      studentInfo: {\r\n        ...this.state.studentInfo,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    console.log('CAMPUS ID IN SUBMIT FUNCT:', this.state.CampusId)\r\n    e.preventDefault()\r\n    const { first, last, email, image, gpa, CampusId } = this.state.studentInfo\r\n    if (!first || !last || !email || !image || !gpa) {\r\n      console.warn(\r\n        'Please enter a value for all required (*) fields: studentname, email, image, gpa'\r\n      )\r\n      return\r\n    }\r\n\r\n    // remove object property because backend won't accept empty property\r\n    // if (!CampusId) {\r\n    //   delete this.state.studentInfo.CampusId\r\n    // }\r\n\r\n    setTimeout(() => {\r\n      this.props.createStudent(this.state.studentInfo)\r\n    }, 300)\r\n\r\n    // sets campus state to created student's campus so that campus redirect works in single student view after creation\r\n    setTimeout(() => {\r\n      this.props.getCampusById(this.props.student.CampusId)\r\n    }, 600)\r\n\r\n    setTimeout(() => {\r\n      this.setState({ redirect: true })\r\n    }, 800)\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect === true) {\r\n      return <Redirect to={`/singleStudent/${this.props.student.id}`} />\r\n    }\r\n\r\n    let HEADER = (\r\n      <HalfHeaderBG imgdiv='half-bg-students' title='Create A Student' />\r\n    )\r\n    if (this.props.showHeader === false) HEADER = ''\r\n\r\n    return (\r\n      <div className='container'>\r\n        {HEADER}\r\n        <form className='createForm' onSubmit={(e) => this.handleSubmit(e)}>\r\n          <div>\r\n            <label>First:</label>\r\n            <input\r\n              type='text'\r\n              name='first'\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Last:</label>\r\n            <input\r\n              type='text'\r\n              name='last'\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Email:</label>\r\n            <input\r\n              type='email'\r\n              name='email'\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Image:</label>\r\n            <input\r\n              type='text'\r\n              name='image'\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>GPA:</label>\r\n            <input\r\n              type='number'\r\n              step='0.01'\r\n              name='gpa'\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Campus:</label>\r\n            <select\r\n              name='campusSelect'\r\n              onChange={(e) => this.handleSelectChange(e)}\r\n            >\r\n              <option value=''>--Select a campus--</option>\r\n              {this.props.campuses !== undefined ? (\r\n                this.props.campuses.map((campus, index) => (\r\n                  <option key={index} value={campus.id}>\r\n                    {campus.campusname}\r\n                  </option>\r\n                ))\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </select>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <input className='btn create-btn' type='submit' value='Submit' />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    student: state.student,\r\n    // needed for redirect, set to created student's campus on creation\r\n    campus: state.campus,\r\n    campuses: state.campuses,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createStudent: (studentInfo) => dispatch(createStudent(studentInfo)),\r\n    getStudentById: (searchStudentId) =>\r\n      dispatch(getStudentById(searchStudentId)),\r\n    getCampusById: (searchCampusId) => dispatch(getCampusById(searchCampusId)),\r\n    getAllCampuses: () => dispatch(getAllCampuses()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateStudent)\r\n","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\SingleCampus.js",[],"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\Navbar.js",[],"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\CreateCampus.js",["92"],"import React, { Component } from \"react\"\r\n\r\nimport { Link, Redirect } from \"react-router-dom\"\r\n\r\nimport { connect } from \"react-redux\"\r\nimport { createCampus } from \"../redux/reducers\"\r\n\r\nclass CreateCampus extends Component {\r\n  state = {\r\n    redirect: false,\r\n    campusInfo: {\r\n      campusname: \"\",\r\n      image: \"\",\r\n      address: \"\",\r\n      description: \"\",\r\n    },\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      campusInfo: {\r\n        ...this.state.campusInfo,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const { campusname, image, address, description } = this.state.campusInfo\r\n    if (!campusname || !image || !address || !description) {\r\n      console.warn(\r\n        \"Please enter a value for all required (*) fields: campusname, image, address, description\"\r\n      )\r\n      return\r\n    }\r\n\r\n    this.props.createCampus(this.state.campusInfo)\r\n\r\n    setTimeout(() => {\r\n      this.setState({ redirect: true })\r\n    }, 500)\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect === true) {\r\n      return <Redirect to={`/singleCampus/${this.props.campus.id}`} />\r\n    }\r\n    return (\r\n      <div>\r\n        <form onSubmit={(e) => this.handleSubmit(e)}>\r\n          <div>\r\n            <label>\r\n              Name:\r\n              <input\r\n                type=\"text\"\r\n                name=\"campusname\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              Image:\r\n              <input\r\n                type=\"text\"\r\n                name=\"image\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              Address:\r\n              <input\r\n                type=\"text\"\r\n                name=\"address\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              Description:\r\n              <input\r\n                type=\"text\"\r\n                name=\"description\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </label>\r\n\r\n            <div>\r\n              <input type=\"submit\" value=\"Submit\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    campus: state.campus,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createCampus: (campusInfo) => dispatch(createCampus(campusInfo)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCampus)\r\n","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\redux\\reducers\\index.js",[],"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\Student.js",["93","94","95"],"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\Campus.js",["96","97","98"],"import React, { Component } from \"react\"\r\n\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport DeleteCampus from \"./DeleteCampus\"\r\n\r\nclass Campus extends Component {\r\n  render() {\r\n    const { id, campusname, image, address, description } = this.props\r\n    return (\r\n      <div>\r\n        <DeleteCampus CampusId={id} />\r\n        <Link to={`/singleCampus/${id}`}>Campus Name: {campusname}</Link>\r\n        <p>Image: {image}</p>\r\n        {/* Requirements just want campus name and image displayed on all campuses */}\r\n        {/* <p>Address: {address}</p> */}\r\n        {/* <p>Description: {description}</p> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Campus\r\n","D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\redux\\reducers\\actionTypes.js",[],"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\DeleteStudent.js",[],"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\DeleteCampus.js",[],"D:\\Downlaods\\TTP Internship\\CRUD\\main\\frontend\\src\\components\\HalfHeaderBG.js",["99"],"import React, { Component } from 'react'\r\n\r\nexport default class HalfHeaderBG extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.imgdiv}>\r\n        <div className='middle-align'>\r\n          <h1>{this.props.title}</h1>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n",{"ruleId":"100","severity":1,"message":"101","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":14},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":14},{"ruleId":"100","severity":1,"message":"108","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":14},{"ruleId":"100","severity":1,"message":"101","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":14},{"ruleId":"100","severity":1,"message":"101","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":14},{"ruleId":"100","severity":1,"message":"109","line":52,"column":45,"nodeType":"102","messageId":"103","endLine":52,"endColumn":53},{"ruleId":"100","severity":1,"message":"101","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":14},{"ruleId":"100","severity":1,"message":"110","line":9,"column":30,"nodeType":"102","messageId":"103","endLine":9,"endColumn":35},{"ruleId":"100","severity":1,"message":"111","line":9,"column":37,"nodeType":"102","messageId":"103","endLine":9,"endColumn":42},{"ruleId":"100","severity":1,"message":"112","line":9,"column":44,"nodeType":"102","messageId":"103","endLine":9,"endColumn":47},{"ruleId":"100","severity":1,"message":"113","line":9,"column":36,"nodeType":"102","messageId":"103","endLine":9,"endColumn":43},{"ruleId":"100","severity":1,"message":"114","line":9,"column":45,"nodeType":"102","messageId":"103","endLine":9,"endColumn":56},{"ruleId":"115","severity":1,"message":"116","line":14,"column":9,"nodeType":"117","endLine":14,"endColumn":53},{"ruleId":"118","severity":1,"message":"119","line":4,"column":3,"nodeType":"120","messageId":"121","endLine":6,"endColumn":4},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"'Navbar' is defined but never used.","'CampusId' is assigned a value but never used.","'email' is assigned a value but never used.","'image' is assigned a value but never used.","'gpa' is assigned a value but never used.","'address' is assigned a value but never used.","'description' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]