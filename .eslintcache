[{"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\index.js":"1","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\reportWebVitals.js":"2","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\redux\\store.js":"3","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\App.js":"4","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\AllCampuses.js":"5","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\Homepage.js":"6","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\SingleStudent.js":"7","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\CreateStudent.js":"8","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\AllStudents.js":"9","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\SingleCampus.js":"10","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\CreateCampus.js":"11","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\redux\\reducers\\index.js":"12","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\Campus.js":"13","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\Student.js":"14","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\redux\\reducers\\actionTypes.js":"15","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\DeleteStudent.js":"16","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\DeleteCampus.js":"17","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\Navbar.js":"18"},{"size":636,"mtime":1611329039694,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1611329039696,"results":"21","hashOfConfig":"20"},{"size":277,"mtime":1611329039696,"results":"22","hashOfConfig":"20"},{"size":1319,"mtime":1611520203972,"results":"23","hashOfConfig":"20"},{"size":2101,"mtime":1611532687730,"results":"24","hashOfConfig":"20"},{"size":344,"mtime":1611530051701,"results":"25","hashOfConfig":"20"},{"size":7692,"mtime":1611530051702,"results":"26","hashOfConfig":"20"},{"size":4671,"mtime":1611530051700,"results":"27","hashOfConfig":"20"},{"size":2194,"mtime":1611530051698,"results":"28","hashOfConfig":"20"},{"size":6974,"mtime":1611529470156,"results":"29","hashOfConfig":"20"},{"size":2644,"mtime":1611530051699,"results":"30","hashOfConfig":"20"},{"size":7008,"mtime":1611520203987,"results":"31","hashOfConfig":"20"},{"size":883,"mtime":1611536217822,"results":"32","hashOfConfig":"20"},{"size":763,"mtime":1611517762260,"results":"33","hashOfConfig":"20"},{"size":506,"mtime":1611456382964,"results":"34","hashOfConfig":"20"},{"size":1168,"mtime":1611456382959,"results":"35","hashOfConfig":"20"},{"size":960,"mtime":1611532432315,"results":"36","hashOfConfig":"20"},{"size":593,"mtime":1611520203977,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"urls5r",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\index.js",[],["78","79"],"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\reportWebVitals.js",[],"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\redux\\store.js",[],"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\App.js",[],"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\AllCampuses.js",["80"],"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\Homepage.js",["81","82"],"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\SingleStudent.js",[],"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\CreateStudent.js",["83"],"import React, { Component } from \"react\"\r\n\r\nimport { Link, Redirect } from \"react-router-dom\"\r\n\r\nimport {\r\n  createStudent,\r\n  getCampusById,\r\n  getStudentById,\r\n  getAllCampuses,\r\n} from \"../redux/reducers\"\r\nimport { connect } from \"react-redux\"\r\n\r\nclass CreateStudent extends Component {\r\n  state = {\r\n    redirect: false,\r\n    studentInfo: {\r\n      first: \"\",\r\n      last: \"\",\r\n      email: \"\",\r\n      image: \"\",\r\n      gpa: null,\r\n      CampusId: null,\r\n    },\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.props.getAllCampuses()\r\n  }\r\n\r\n  handleSelectChange = (e) => {\r\n    this.setState({\r\n      studentInfo: {\r\n        ...this.state.studentInfo,\r\n        CampusId: e.target.value,\r\n      },\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      studentInfo: {\r\n        ...this.state.studentInfo,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    console.log(\"CAMPUS ID IN SUBMIT FUNCT:\", this.state.CampusId)\r\n    e.preventDefault()\r\n    const { first, last, email, image, gpa, CampusId } = this.state.studentInfo\r\n    if (!first || !last || !email || !image || !gpa) {\r\n      console.warn(\r\n        \"Please enter a value for all required (*) fields: studentname, email, image, gpa\"\r\n      )\r\n      return\r\n    }\r\n\r\n    // remove object property because backend won't accept empty property\r\n    if (!CampusId) {\r\n      delete this.state.studentInfo.CampusId\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.props.createStudent(this.state.studentInfo)\r\n    }, 300)\r\n\r\n    // sets campus state to created student's campus so that campus redirect works in single student view after creation\r\n    setTimeout(() => {\r\n      this.props.getCampusById(this.props.student.CampusId)\r\n    }, 600)\r\n\r\n    setTimeout(() => {\r\n      this.setState({ redirect: true })\r\n    }, 800)\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect === true) {\r\n      return <Redirect to={`/singleStudent/${this.props.student.id}`} />\r\n    }\r\n    return (\r\n      <div>\r\n        <form onSubmit={(e) => this.handleSubmit(e)}>\r\n          <div>\r\n            <label>\r\n              First:\r\n              <input\r\n                type=\"text\"\r\n                name=\"first\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              Last:\r\n              <input\r\n                type=\"text\"\r\n                name=\"last\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              Email:\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              Image:\r\n              <input\r\n                type=\"text\"\r\n                name=\"image\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <label>\r\n              GPA:\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                name=\"gpa\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <select\r\n              name=\"campusSelect\"\r\n              onChange={(e) => this.handleSelectChange(e)}\r\n            >\r\n              <option value=\"\">--Select a campus--</option>\r\n              {this.props.campuses !== undefined ? (\r\n                this.props.campuses.map((campus, index) => (\r\n                  <option key={index} value={campus.id}>\r\n                    {campus.campusname}\r\n                  </option>\r\n                ))\r\n              ) : (\r\n                <span />\r\n              )}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <input type=\"submit\" value=\"Submit\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    student: state.student,\r\n    // needed for redirect, set to created student's campus on creation\r\n    campus: state.campus,\r\n    campuses: state.campuses,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createStudent: (studentInfo) => dispatch(createStudent(studentInfo)),\r\n    getStudentById: (searchStudentId) =>\r\n      dispatch(getStudentById(searchStudentId)),\r\n    getCampusById: (searchCampusId) => dispatch(getCampusById(searchCampusId)),\r\n    getAllCampuses: () => dispatch(getAllCampuses()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateStudent)\r\n","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\AllStudents.js",[],"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\SingleCampus.js",["84"],"import React, { Component } from \"react\"\r\n\r\nimport { Link, Redirect } from \"react-router-dom\"\r\n\r\nimport { connect } from \"react-redux\"\r\nimport { getCampusById, updateCampus, deleteCampus } from \"../redux/reducers\"\r\n\r\nimport Student from \"./Student\"\r\nimport CreateStudent from \"./CreateStudent\"\r\n\r\nclass SingleCampus extends Component {\r\n  state = {\r\n    redirect: false,\r\n    editing: false,\r\n    addingStudent: false,\r\n    campusInfo: {\r\n      id: this.props.match.params.id, // id from url\r\n      campusname: this.props.campus.campusname,\r\n      image: this.props.campus.image,\r\n      address: this.props.campus.address,\r\n      description: this.props.campus.description,\r\n    },\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.props.getCampusById(this.props.match.params.id)\r\n  }\r\n\r\n  handleDelete = () => {\r\n    this.props.deleteCampus(this.props.match.params.id)\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        redirect: true,\r\n      })\r\n    }, 500)\r\n  }\r\n\r\n  handleEditChange = (e) => {\r\n    this.setState({\r\n      campusInfo: {\r\n        ...this.state.campusInfo,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    })\r\n  }\r\n\r\n  handleEditSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    this.props.updateCampus(this.state.campusInfo)\r\n\r\n    setTimeout(() => {\r\n      this.props.getCampusById(this.props.match.params.id)\r\n    }, 300)\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        editing: false,\r\n      })\r\n    }, 600)\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Students of campus:\", this.props.campus.Students)\r\n    if (this.state.redirect === true) {\r\n      return <Redirect to=\"/allCampuses\" />\r\n    }\r\n    if (!this.state.editing) {\r\n      return (\r\n        <div>\r\n          <Link to=\"/allCampuses\">All Campuses</Link>\r\n          <br />\r\n          <Link to=\"/\">Return Home</Link>\r\n          <br />\r\n\r\n          <div>\r\n            <button onClick={() => this.handleDelete()}>Delete Campus</button>\r\n          </div>\r\n          {this.props.campus !== undefined ? (\r\n            <div>\r\n              <p>Name: {this.props.campus.campusname}</p>\r\n              <img src={this.props.campus.image}/>\r\n              <p>Address: {this.props.campus.address}</p>\r\n              <p>Description: {this.props.campus.description}</p>\r\n              <div>\r\n                <button onClick={() => this.setState({ editing: true })}>\r\n                  Edit Campus\r\n                </button>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  onClick={() =>\r\n                    this.setState({ addingStudent: !this.state.addingStudent })\r\n                  }\r\n                >\r\n                  Add Student\r\n                </button>\r\n              </div>\r\n              {this.state.addingStudent === true ? (\r\n                <div>\r\n                  <div>\r\n                    <CreateStudent />\r\n                  </div>\r\n                  <div>\r\n                    <button\r\n                      onClick={() => this.setState({ addingStudent: false })}\r\n                    >\r\n                      Cancel Addition\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <span />\r\n              )}\r\n              <div>\r\n                <div>\r\n                  {this.props.campus.Students !== undefined ? (\r\n                    this.props.campus.Students.length === 0 ? (\r\n                      <div>\r\n                        <p>\r\n                          This campus does not have any students enrolled at the\r\n                          moment.\r\n                        </p>\r\n                      </div>\r\n                    ) : (\r\n                      this.props.campus.Students.map((student, index) => (\r\n                        <div key={index}>\r\n                          <p>Students:</p>\r\n                          <Student\r\n                            id={student.id}\r\n                            first={student.first}\r\n                            last={student.last}\r\n                            email={student.email}\r\n                            image={student.image}\r\n                            gpa={student.gpa}\r\n                            CampusId={student.CampusId}\r\n                          />\r\n                        </div>\r\n                      ))\r\n                    )\r\n                  ) : (\r\n                    <br />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <br />\r\n          )}\r\n\r\n          {/* <div>\r\n            <button onClick={() => this.setState({ editing: true })}>\r\n              Edit\r\n            </button>\r\n          </div> */}\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <form onSubmit={(e) => this.handleEditSubmit(e)}>\r\n            <div>\r\n              <label>\r\n                Name:\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"campusname\"\r\n                  placeholder={this.props.campus.campusname}\r\n                  onChange={(e) => this.handleEditChange(e)}\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                Image:\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"image\"\r\n                  placeholder={this.props.campus.image}\r\n                  onChange={(e) => this.handleEditChange(e)}\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                Address:\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  placeholder={this.props.campus.address}\r\n                  onChange={(e) => this.handleEditChange(e)}\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                Description:\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  placeholder={this.props.campus.description}\r\n                  onChange={(e) => this.handleEditChange(e)}\r\n                />\r\n              </label>\r\n            </div>\r\n\r\n            <div>\r\n              <button onClick={() => this.setState({ editing: false })}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n\r\n            <div>\r\n              <input type=\"submit\" value=\"Submit\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    campus: state.campus,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getCampusById: (searchCampusId) => dispatch(getCampusById(searchCampusId)),\r\n    updateCampus: (campusInfo) => dispatch(updateCampus(campusInfo)),\r\n    deleteCampus: (deleteCampusId) => dispatch(deleteCampus(deleteCampusId)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleCampus)\r\n","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\CreateCampus.js",["85"],"import React, { Component } from 'react'\r\n\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { createCampus } from '../redux/reducers'\r\n\r\nclass CreateCampus extends Component {\r\n  state = {\r\n    redirect: false,\r\n    campusInfo: {\r\n      campusname: '',\r\n      image: '',\r\n      address: '',\r\n      description: '',\r\n    },\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      campusInfo: {\r\n        ...this.state.campusInfo,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const { campusname, image, address, description } = this.state.campusInfo\r\n    if (!campusname || !image || !address || !description) {\r\n      console.warn(\r\n        'Please enter a value for all required (*) fields: campusname, image, address, description'\r\n      )\r\n      return\r\n    }\r\n\r\n    this.props.createCampus(this.state.campusInfo)\r\n\r\n    setTimeout(() => {\r\n      this.setState({ redirect: true })\r\n    }, 500)\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect === true) {\r\n      return <Redirect to={`/singleCampus/${this.props.campus.id}`} />\r\n    }\r\n    return (\r\n      <div>\r\n        <form\r\n          className='createCampusForm'\r\n          onSubmit={(e) => this.handleSubmit(e)}\r\n        >\r\n          <div>\r\n            <label>Name:</label>\r\n            <input\r\n              type='text'\r\n              name='campusname'\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Image:</label>\r\n            <input\r\n              type='text'\r\n              name='image'\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Address:</label>\r\n            <input\r\n              type='text'\r\n              name='address'\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Description:</label>\r\n            <input\r\n              type='text'\r\n              name='description'\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input className='btn create-btn' type='submit' value='Submit' />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    campus: state.campus,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createCampus: (campusInfo) => dispatch(createCampus(campusInfo)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCampus)\r\n","C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\redux\\reducers\\index.js",[],"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\Campus.js",["86","87","88","89","90"],"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\Student.js",[],"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\redux\\reducers\\actionTypes.js",[],"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\DeleteStudent.js",[],"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\DeleteCampus.js",[],"C:\\Users\\marin\\bootcamp\\frontend-crud-template\\src\\components\\Navbar.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"99","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"100","severity":1,"message":"101","line":83,"column":15,"nodeType":"102","endLine":83,"endColumn":51},{"ruleId":"95","severity":1,"message":"96","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"95","severity":1,"message":"103","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":19},{"ruleId":"95","severity":1,"message":"104","line":7,"column":8,"nodeType":"97","messageId":"98","endLine":7,"endColumn":15},{"ruleId":"95","severity":1,"message":"105","line":11,"column":36,"nodeType":"97","messageId":"98","endLine":11,"endColumn":43},{"ruleId":"95","severity":1,"message":"106","line":11,"column":58,"nodeType":"97","messageId":"98","endLine":11,"endColumn":66},{"ruleId":"100","severity":1,"message":"101","line":19,"column":9,"nodeType":"102","endLine":19,"endColumn":52},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AllStudents' is defined but never used.","'Student' is defined but never used.","'address' is assigned a value but never used.","'Students' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]