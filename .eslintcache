[{"/Users/mojaho/Github/frontend-crud-template/src/index.js":"1","/Users/mojaho/Github/frontend-crud-template/src/reportWebVitals.js":"2","/Users/mojaho/Github/frontend-crud-template/src/redux/store.js":"3","/Users/mojaho/Github/frontend-crud-template/src/App.js":"4","/Users/mojaho/Github/frontend-crud-template/src/components/AllStudents.js":"5","/Users/mojaho/Github/frontend-crud-template/src/components/AllCampuses.js":"6","/Users/mojaho/Github/frontend-crud-template/src/components/Homepage.js":"7","/Users/mojaho/Github/frontend-crud-template/src/components/SingleStudent.js":"8","/Users/mojaho/Github/frontend-crud-template/src/components/CreateStudent.js":"9","/Users/mojaho/Github/frontend-crud-template/src/redux/reducers/index.js":"10","/Users/mojaho/Github/frontend-crud-template/src/components/Campus.js":"11","/Users/mojaho/Github/frontend-crud-template/src/components/Student.js":"12","/Users/mojaho/Github/frontend-crud-template/src/redux/reducers/actionTypes.js":"13","/Users/mojaho/Github/frontend-crud-template/src/components/DeleteStudent.js":"14","/Users/mojaho/Github/frontend-crud-template/src/components/CreateCampus.js":"15","/Users/mojaho/Github/frontend-crud-template/src/components/SingleCampus.js":"16","/Users/mojaho/Github/frontend-crud-template/src/components/DeleteCampus.js":"17","/Users/mojaho/Github/frontend-crud-template/src/components/Navbar.js":"18","/Users/mojaho/Github/frontend-crud-template/src/components/HalfHeaderBG.js":"19","/Users/mojaho/Github/frontend-crud-template/src/helper/validateEmail.js":"20","/Users/mojaho/Github/frontend-crud-template/src/helper/backend.js":"21"},{"size":593,"mtime":1611548821598,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1611328992500,"results":"24","hashOfConfig":"23"},{"size":268,"mtime":1611328992500,"results":"25","hashOfConfig":"23"},{"size":1283,"mtime":1611547908154,"results":"26","hashOfConfig":"23"},{"size":2291,"mtime":1611546113422,"results":"27","hashOfConfig":"23"},{"size":3331,"mtime":1611542724733,"results":"28","hashOfConfig":"23"},{"size":640,"mtime":1611542724740,"results":"29","hashOfConfig":"23"},{"size":7633,"mtime":1611548615307,"results":"30","hashOfConfig":"23"},{"size":4887,"mtime":1611547073424,"results":"31","hashOfConfig":"23"},{"size":6636,"mtime":1611548247776,"results":"32","hashOfConfig":"23"},{"size":868,"mtime":1611546113423,"results":"33","hashOfConfig":"23"},{"size":907,"mtime":1611546220162,"results":"34","hashOfConfig":"23"},{"size":495,"mtime":1611458674249,"results":"35","hashOfConfig":"23"},{"size":1165,"mtime":1611542724738,"results":"36","hashOfConfig":"23"},{"size":2769,"mtime":1611542724735,"results":"37","hashOfConfig":"23"},{"size":7110,"mtime":1611543385786,"results":"38","hashOfConfig":"23"},{"size":931,"mtime":1611542892851,"results":"39","hashOfConfig":"23"},{"size":573,"mtime":1611520805608,"results":"40","hashOfConfig":"23"},{"size":326,"mtime":1611542724739,"results":"41","hashOfConfig":"23"},{"size":275,"mtime":1611547026117,"results":"42","hashOfConfig":"23"},{"size":64,"mtime":1611547936953,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14c2hcg",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/mojaho/Github/frontend-crud-template/src/index.js",[],"/Users/mojaho/Github/frontend-crud-template/src/reportWebVitals.js",[],["92","93"],"/Users/mojaho/Github/frontend-crud-template/src/redux/store.js",[],"/Users/mojaho/Github/frontend-crud-template/src/App.js",[],"/Users/mojaho/Github/frontend-crud-template/src/components/AllStudents.js",["94"],"/Users/mojaho/Github/frontend-crud-template/src/components/AllCampuses.js",["95"],"import React, { Component } from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport { getAllCampuses } from '../redux/reducers'\n\nimport Campus from './Campus'\nimport CreateCampus from './CreateCampus'\n\nclass AllCampuses extends Component {\n  state = {\n    addingCampus: false,\n  }\n\n  async componentDidMount() {\n    await this.fetchAllCampuses()\n  }\n\n  async fetchAllCampuses() {\n    await this.props.getAllCampuses()\n    setTimeout(() => {\n      console.log(this.props.campuses)\n    }, 200)\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='half-bg-campuses'></div>\n\n        <h1>All Campuses Component</h1>\n\n        <div>\n          <button\n            onClick={() =>\n              this.setState({ addingCampus: !this.state.addingCampus })\n            }\n          >\n            Add Campus\n          </button>\n        </div>\n        {this.state.addingCampus === true ? (\n          <div>\n            <CreateCampus />\n            <div>\n              <button onClick={() => this.setState({ addingCampus: false })}>\n                Cancel Addition\n              </button>\n              <br />\n              <br />\n            </div>\n          </div>\n        ) : (\n          <br />\n        )}\n\n        {this.props.campuses !== undefined ? (\n          this.props.campuses.map((campus, index) => (\n            <Campus\n              key={index}\n              id={campus.id}\n              campusname={campus.campusname}\n              image={campus.image}\n              address={campus.address}\n              description={campus.description}\n            />\n          ))\n        ) : (\n          <span />\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    campuses: state.campuses,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllCampuses: () => dispatch(getAllCampuses()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllCampuses)\n","/Users/mojaho/Github/frontend-crud-template/src/components/Homepage.js",["96","97"],"import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Navbar from \"./Navbar\"\n\nclass Homepage extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"bg-whole\"></div> {/* <- bkg img on homepage */}\n      </div>\n    )\n  }\n}\n\nexport default Homepage\n","/Users/mojaho/Github/frontend-crud-template/src/components/SingleStudent.js",["98"],"/Users/mojaho/Github/frontend-crud-template/src/components/CreateStudent.js",["99"],"/Users/mojaho/Github/frontend-crud-template/src/redux/reducers/index.js",[],"/Users/mojaho/Github/frontend-crud-template/src/components/Campus.js",["100","101"],"import React, { Component } from \"react\"\n\nimport { Link } from \"react-router-dom\"\n\nimport DeleteCampus from \"./DeleteCampus\"\n\nclass Campus extends Component {\n  render() {\n    const { id, campusname, image, address, description } = this.props\n    return (\n      <div>\n        <DeleteCampus CampusId={id} />\n        <Link to={`/singleCampus/${id}`}>Campus Name: {campusname}</Link>\n        <p>Image: {image}</p>\n        {/* Requirements just want campus name and image displayed on all campuses */}\n        {/* <p>Address: {address}</p> */}\n        {/* <p>Description: {description}</p> */}\n      </div>\n    )\n  }\n}\n\nexport default Campus\n","/Users/mojaho/Github/frontend-crud-template/src/components/Student.js",["102","103","104"],"/Users/mojaho/Github/frontend-crud-template/src/redux/reducers/actionTypes.js",[],"/Users/mojaho/Github/frontend-crud-template/src/components/DeleteStudent.js",[],"/Users/mojaho/Github/frontend-crud-template/src/components/CreateCampus.js",["105"],"import React, { Component } from 'react'\n\nimport { Link, Redirect } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport { createCampus } from '../redux/reducers'\n\nclass CreateCampus extends Component {\n  state = {\n    redirect: false,\n    campusInfo: {\n      campusname: '',\n      image: '',\n      address: '',\n      description: '',\n    },\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      campusInfo: {\n        ...this.state.campusInfo,\n        [e.target.name]: e.target.value,\n      },\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    const { campusname, image, address, description } = this.state.campusInfo\n    if (!campusname || !image || !address || !description) {\n      console.warn(\n        'Please enter a value for all required (*) fields: campusname, image, address, description'\n      )\n      return\n    }\n\n    this.props.createCampus(this.state.campusInfo)\n\n    setTimeout(() => {\n      this.setState({ redirect: true })\n    }, 500)\n  }\n\n  render() {\n    if (this.state.redirect === true) {\n      return <Redirect to={`/singleCampus/${this.props.campus.id}`} />\n    }\n    return (\n      <div>\n        <form className='createForm' onSubmit={(e) => this.handleSubmit(e)}>\n          <div>\n            <label>Name:</label>\n            <input\n              type='text'\n              name='campusname'\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n\n          <div>\n            <label>Image:</label>\n            <input\n              type='text'\n              name='image'\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n\n          <div>\n            <label>Address:</label>\n            <input\n              type='text'\n              name='address'\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n\n          <div>\n            <label>Description:</label>\n            <input\n              type='text'\n              name='description'\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <br />\n          <div>\n            <input className='btn create-btn' type='submit' value='Submit' />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    campus: state.campus,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createCampus: (campusInfo) => dispatch(createCampus(campusInfo)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCampus)\n","/Users/mojaho/Github/frontend-crud-template/src/components/SingleCampus.js",["106","107"],"/Users/mojaho/Github/frontend-crud-template/src/components/DeleteCampus.js",[],"/Users/mojaho/Github/frontend-crud-template/src/components/Navbar.js",[],"/Users/mojaho/Github/frontend-crud-template/src/components/HalfHeaderBG.js",["108"],"import React, { Component } from 'react'\n\nexport default class HalfHeaderBG extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div className={this.props.imgdiv}>\n        <div className='middle-align'>\n          <h1>{this.props.title}</h1>\n        </div>\n      </div>\n    )\n  }\n}\n","/Users/mojaho/Github/frontend-crud-template/src/helper/validateEmail.js",[],"/Users/mojaho/Github/frontend-crud-template/src/helper/backend.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"113","severity":1,"message":"114","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"113","severity":1,"message":"114","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"117","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"119","line":125,"column":15,"nodeType":"120","endLine":125,"endColumn":79},{"ruleId":"113","severity":1,"message":"114","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"113","severity":1,"message":"121","line":9,"column":36,"nodeType":"115","messageId":"116","endLine":9,"endColumn":43},{"ruleId":"113","severity":1,"message":"122","line":9,"column":45,"nodeType":"115","messageId":"116","endLine":9,"endColumn":56},{"ruleId":"113","severity":1,"message":"123","line":9,"column":30,"nodeType":"115","messageId":"116","endLine":9,"endColumn":35},{"ruleId":"113","severity":1,"message":"124","line":9,"column":44,"nodeType":"115","messageId":"116","endLine":9,"endColumn":47},{"ruleId":"125","severity":1,"message":"126","line":14,"column":11,"nodeType":"120","endLine":14,"endColumn":76},{"ruleId":"113","severity":1,"message":"114","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"113","severity":1,"message":"114","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"119","line":83,"column":17,"nodeType":"120","endLine":83,"endColumn":79},{"ruleId":"127","severity":1,"message":"128","line":4,"column":3,"nodeType":"129","messageId":"130","endLine":6,"endColumn":4},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'address' is assigned a value but never used.","'description' is assigned a value but never used.","'email' is assigned a value but never used.","'gpa' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]