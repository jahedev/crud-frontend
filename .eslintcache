[{"/Users/mojaho/Github/frontend-crud-template/src/index.js":"1","/Users/mojaho/Github/frontend-crud-template/src/reportWebVitals.js":"2","/Users/mojaho/Github/frontend-crud-template/src/redux/store.js":"3","/Users/mojaho/Github/frontend-crud-template/src/App.js":"4","/Users/mojaho/Github/frontend-crud-template/src/components/AllStudents.js":"5","/Users/mojaho/Github/frontend-crud-template/src/components/AllCampuses.js":"6","/Users/mojaho/Github/frontend-crud-template/src/components/Homepage.js":"7","/Users/mojaho/Github/frontend-crud-template/src/components/SingleStudent.js":"8","/Users/mojaho/Github/frontend-crud-template/src/components/CreateStudent.js":"9","/Users/mojaho/Github/frontend-crud-template/src/redux/reducers/index.js":"10","/Users/mojaho/Github/frontend-crud-template/src/components/Campus.js":"11","/Users/mojaho/Github/frontend-crud-template/src/components/Student.js":"12","/Users/mojaho/Github/frontend-crud-template/src/redux/reducers/actionTypes.js":"13","/Users/mojaho/Github/frontend-crud-template/src/components/DeleteStudent.js":"14","/Users/mojaho/Github/frontend-crud-template/src/components/CreateCampus.js":"15","/Users/mojaho/Github/frontend-crud-template/src/components/SingleCampus.js":"16","/Users/mojaho/Github/frontend-crud-template/src/components/DeleteCampus.js":"17","/Users/mojaho/Github/frontend-crud-template/src/components/Navbar.js":"18"},{"size":614,"mtime":1611514534978,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1611328992500,"results":"21","hashOfConfig":"20"},{"size":268,"mtime":1611328992500,"results":"22","hashOfConfig":"20"},{"size":1283,"mtime":1611520805604,"results":"23","hashOfConfig":"20"},{"size":2102,"mtime":1611530000035,"results":"24","hashOfConfig":"20"},{"size":1985,"mtime":1611530000032,"results":"25","hashOfConfig":"20"},{"size":621,"mtime":1611530939195,"results":"26","hashOfConfig":"20"},{"size":7411,"mtime":1611529523415,"results":"27","hashOfConfig":"20"},{"size":4493,"mtime":1611529811486,"results":"28","hashOfConfig":"20"},{"size":6704,"mtime":1611520805629,"results":"29","hashOfConfig":"20"},{"size":638,"mtime":1611529506324,"results":"30","hashOfConfig":"20"},{"size":736,"mtime":1611514546082,"results":"31","hashOfConfig":"20"},{"size":495,"mtime":1611458674249,"results":"32","hashOfConfig":"20"},{"size":1125,"mtime":1611458674248,"results":"33","hashOfConfig":"20"},{"size":2534,"mtime":1611529811486,"results":"34","hashOfConfig":"20"},{"size":6733,"mtime":1611529506326,"results":"35","hashOfConfig":"20"},{"size":891,"mtime":1611458674248,"results":"36","hashOfConfig":"20"},{"size":573,"mtime":1611520805608,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14c2hcg",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/mojaho/Github/frontend-crud-template/src/index.js",[],"/Users/mojaho/Github/frontend-crud-template/src/reportWebVitals.js",[],["78","79"],"/Users/mojaho/Github/frontend-crud-template/src/redux/store.js",[],"/Users/mojaho/Github/frontend-crud-template/src/App.js",[],"/Users/mojaho/Github/frontend-crud-template/src/components/AllStudents.js",["80"],"import React, { Component } from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport { getAllStudents } from '../redux/reducers'\n\nimport Student from './Student'\nimport CreateStudent from './CreateStudent'\n\nclass AllStudents extends Component {\n  state = {\n    addingStudent: false,\n  }\n\n  async componentDidMount() {\n    await this.fetchAllStudents()\n  }\n\n  async fetchAllStudents() {\n    await this.props.getAllStudents()\n    setTimeout(() => {\n      console.log(this.props.students)\n    }, 200)\n  }\n\n  render() {\n    return (\n      <div>\n        <Link to='/'>Return Home</Link>\n        <br />\n\n        <h1>All Students Component</h1>\n\n        <div>\n          <button\n            onClick={() =>\n              this.setState({ addingStudent: !this.state.addingStudent })\n            }\n          >\n            Add Student\n          </button>\n        </div>\n        {this.state.addingStudent === true ? (\n          <div>\n            <CreateStudent />\n            <div>\n              <button onClick={() => this.setState({ addingStudent: false })}>\n                Cancel Addition\n              </button>\n              <br />\n              <br />\n            </div>\n          </div>\n        ) : (\n          <br />\n        )}\n\n        {this.props.students !== undefined ? (\n          this.props.students.map((student, index) => (\n            <Student\n              key={index}\n              id={student.id}\n              first={student.first}\n              last={student.last}\n              email={student.email}\n              image={student.image}\n              gpa={student.gpa}\n              CampusId={student.CampusId}\n            />\n          ))\n        ) : (\n          <br />\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    students: state.students,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllStudents: () => dispatch(getAllStudents()),\n    // deleteStudent: () => dispatch(deleteStudent()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllStudents)\n","/Users/mojaho/Github/frontend-crud-template/src/components/AllCampuses.js",["81"],"/Users/mojaho/Github/frontend-crud-template/src/components/Homepage.js",["82","83"],"/Users/mojaho/Github/frontend-crud-template/src/components/SingleStudent.js",[],"/Users/mojaho/Github/frontend-crud-template/src/components/CreateStudent.js",["84","85"],"import React, { Component } from \"react\"\n\nimport { Link, Redirect } from \"react-router-dom\"\n\nimport {\n  createStudent,\n  getCampusById,\n  getStudentById,\n  getAllCampuses,\n} from \"../redux/reducers\"\n\nimport { connect } from \"react-redux\"\n\nclass CreateStudent extends Component {\n  state = {\n    redirect: false,\n    studentInfo: {\n      first: \"\",\n      last: \"\",\n      email: \"\",\n      image: \"\",\n      gpa: \"\",\n      CampusId: \"\",\n    },\n  }\n\n  componentDidMount = async () => {\n    await this.props.getAllCampuses()\n  }\n\n  handleSelectChange = (e) => {\n    this.setState({\n      studentInfo: {\n        ...this.state.studentInfo,\n        CampusId: e.target.value,\n      },\n    })\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      studentInfo: {\n        ...this.state.studentInfo,\n        [e.target.name]: e.target.value,\n      },\n    })\n  }\n\n  handleSubmit = (e) => {\n    console.log(\"CAMPUS ID IN SUBMIT FUNCT:\", this.state.CampusId)\n    e.preventDefault()\n    const { first, last, email, image, gpa, CampusId } = this.state.studentInfo\n    if (!first || !last || !email || !image || !gpa) {\n      console.warn(\n        \"Please enter a value for all required (*) fields: studentname, email, image, gpa\"\n      )\n      return\n    }\n\n    // remove object property because backend won't accept empty property\n    // if (!CampusId) {\n    //   delete this.state.studentInfo.CampusId\n    // }\n\n    setTimeout(() => {\n      this.props.createStudent(this.state.studentInfo)\n    }, 300)\n\n    // sets campus state to created student's campus so that campus redirect works in single student view after creation\n    setTimeout(() => {\n      this.props.getCampusById(this.props.student.CampusId)\n    }, 600)\n\n    setTimeout(() => {\n      this.setState({ redirect: true })\n    }, 800)\n  }\n\n  render() {\n    if (this.state.redirect === true) {\n      return <Redirect to={`/singleStudent/${this.props.student.id}`} />\n    }\n    return (\n      <div>\n        <form className=\"createForm\" onSubmit={(e) => this.handleSubmit(e)}>\n          <div>\n            <label>First:</label>\n            <input\n              type=\"text\"\n              name=\"first\"\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n\n          <div>\n            <label>Last:</label>\n            <input\n              type=\"text\"\n              name=\"last\"\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n\n          <div>\n            <label>Email:</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n\n          <div>\n            <label>Image:</label>\n            <input\n              type=\"text\"\n              name=\"image\"\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n\n          <div>\n            <label>GPA:</label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              name=\"gpa\"\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <div>\n            <label>Campus:</label>\n            <select\n              name=\"campusSelect\"\n              onChange={(e) => this.handleSelectChange(e)}\n            >\n              <option value=\"\">--Select a campus--</option>\n              {this.props.campuses !== undefined ? (\n                this.props.campuses.map((campus, index) => (\n                  <option key={index} value={campus.id}>\n                    {campus.campusname}\n                  </option>\n                ))\n              ) : (\n                <span />\n              )}\n            </select>\n          </div>\n          <br />\n          <div>\n            <input className=\"btn create-btn\" type=\"submit\" value=\"Submit\" />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    student: state.student,\n    // needed for redirect, set to created student's campus on creation\n    campus: state.campus,\n    campuses: state.campuses,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createStudent: (studentInfo) => dispatch(createStudent(studentInfo)),\n    getStudentById: (searchStudentId) =>\n      dispatch(getStudentById(searchStudentId)),\n    getCampusById: (searchCampusId) => dispatch(getCampusById(searchCampusId)),\n    getAllCampuses: () => dispatch(getAllCampuses()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateStudent)\n","/Users/mojaho/Github/frontend-crud-template/src/redux/reducers/index.js",[],"/Users/mojaho/Github/frontend-crud-template/src/components/Campus.js",["86","87"],"/Users/mojaho/Github/frontend-crud-template/src/components/Student.js",[],"/Users/mojaho/Github/frontend-crud-template/src/redux/reducers/actionTypes.js",[],"/Users/mojaho/Github/frontend-crud-template/src/components/DeleteStudent.js",[],"/Users/mojaho/Github/frontend-crud-template/src/components/CreateCampus.js",["88"],"import React, { Component } from \"react\"\n\nimport { Link, Redirect } from \"react-router-dom\"\n\nimport { connect } from \"react-redux\"\nimport { createCampus } from \"../redux/reducers\"\n\nclass CreateCampus extends Component {\n  state = {\n    redirect: false,\n    campusInfo: {\n      campusname: \"\",\n      image: \"\",\n      address: \"\",\n      description: \"\",\n    },\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      campusInfo: {\n        ...this.state.campusInfo,\n        [e.target.name]: e.target.value,\n      },\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    const { campusname, image, address, description } = this.state.campusInfo\n    if (!campusname || !image || !address || !description) {\n      console.warn(\n        \"Please enter a value for all required (*) fields: campusname, image, address, description\"\n      )\n      return\n    }\n\n    this.props.createCampus(this.state.campusInfo)\n\n    setTimeout(() => {\n      this.setState({ redirect: true })\n    }, 500)\n  }\n\n  render() {\n    if (this.state.redirect === true) {\n      return <Redirect to={`/singleCampus/${this.props.campus.id}`} />\n    }\n    return (\n      <div>\n        <form onSubmit={(e) => this.handleSubmit(e)}>\n          <div>\n            <label>\n              Name:\n              <input\n                type=\"text\"\n                name=\"campusname\"\n                onChange={(e) => this.handleChange(e)}\n              />\n            </label>\n          </div>\n\n          <div>\n            <label>\n              Image:\n              <input\n                type=\"text\"\n                name=\"image\"\n                onChange={(e) => this.handleChange(e)}\n              />\n            </label>\n          </div>\n\n          <div>\n            <label>\n              Address:\n              <input\n                type=\"text\"\n                name=\"address\"\n                onChange={(e) => this.handleChange(e)}\n              />\n            </label>\n          </div>\n\n          <div>\n            <label>\n              Description:\n              <input\n                type=\"text\"\n                name=\"description\"\n                onChange={(e) => this.handleChange(e)}\n              />\n            </label>\n\n            <div>\n              <input type=\"submit\" value=\"Submit\" />\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    campus: state.campus,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createCampus: (campusInfo) => dispatch(createCampus(campusInfo)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCampus)\n","/Users/mojaho/Github/frontend-crud-template/src/components/SingleCampus.js",[],"/Users/mojaho/Github/frontend-crud-template/src/components/DeleteCampus.js",[],"/Users/mojaho/Github/frontend-crud-template/src/components/Navbar.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"93","severity":1,"message":"97","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"98","line":51,"column":45,"nodeType":"95","messageId":"96","endLine":51,"endColumn":53},{"ruleId":"93","severity":1,"message":"99","line":9,"column":36,"nodeType":"95","messageId":"96","endLine":9,"endColumn":43},{"ruleId":"93","severity":1,"message":"100","line":9,"column":45,"nodeType":"95","messageId":"96","endLine":9,"endColumn":56},{"ruleId":"93","severity":1,"message":"94","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'CampusId' is assigned a value but never used.","'address' is assigned a value but never used.","'description' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]